
    CSS?
        (Cascading Styled Sheets)

    HTML 문서에 style 속성을 추가하여 시각적으로 꾸며주는 역할
    디자인 부분을 담당

    ---------------------------------------------------------

    CSS 적용 방법 

        1. 내부 스타일링
            ex)
                <html>
                    <head>
                        <style>
                            ... CSS 문법 
                            
                            ex) 선택자 {
                                CSS속성 : 속성값
                            }

                                p {
                                    text-align: center;
                                }

                        </style>
                    </head>
                </html>


        2. 외부 스타일링 
            - HTML 문서의 <head> 요소 안에 <link> 요소를 활용하여
              한 페이지(html 파일)이 아닌 외부에 만들어둔 CSS 파일을 연결하여 적용

              => css가 다른 파일로 존재하기 때문에 다른 html에도 적용할 수 있는 장점

              ex)
                css (folder)
                    style.css (file) 

                <head>
                    ...
                    <link href="./css/style.css" rel="stylesheet" />
                </head>

        3. 인라인 스타일링 
            - 요소 안에 속성으로서 활용하여 적용

                ex) 
                    <p style="font-size:50px;"> ... </p>

            - 내부, 외부를 포함한 어떠한 css 보다도 우선순위가 가장 높습니다.

    ---------------------------------------------------------------------------------------

    선택자
        CSS문법
            선택자 {
            -----
                ...CSS 
            }


        1) 전체 선택자
            스타일을 모든 요소에 적용
            단, 전체 선택자는 다른 선택자보다 우선 순위가 낮기 때문에
            그 이후 선언되는 CSS 속성이 있다면 덮어 씌워진다.

            ex) 
                * {
                    CSS속성: 속성값;
                }

            언제 쓰이냐?

                1. reset.css 
                2. fonts


        2) 요소 선택자
            특정 태그명을 선택해서 모든 해당 태그에 CSS를 적용
                ex) p {
                    CSS속성: 속성값;
                }

        * 3) id / class 선택자

            ex) id 
                <p id=""></p>
                <div id=""></div> -- (x) id는 하나여야만 함.(에러는 나지 않지만)

            ex) class 
                <p class="hyun"></p>
                <div class="hyun"></div>
                <p class=hyun"></p>

            id, class는 고유 값과 그룹화를 위해 사용
            특정 요소를 그룹으로 묶어주거나 하나의 요소만 구분하기 위해 사용

            -> 요소에 이름을 지어주는 행위

            이를 활용한다면 내가 원하는 특정 요소를 선택하여 css 속성을 부여할 수 있고
            한 번의 css 속성을 통해 여러 요소(그룹)에 css 적용이 가능

            id 선택자 
                #아이디명 {
                    CSS 속성명: 속성값;
                }

                ex)
                    <div id="nav"></div>

                    #nav{
                        ...
                    }
            
            class 선택자 (.)
                .클래스명 {
                    CSS 속성명: 속성값;
                }

                <ul id="menu">
                    <li class="menu-item"></li>
                    <li class="menu-item"></li>
                    <li class="menu-item"></li>
                </ul>

                ex)
                    .menu-item {
                        ...
                    }

-------------------------------------------------------------------------------------------

        4) 그룹선택자
            선택자1, 선택자2 {
                ...
            }

            ex)
                p, div {
                    ...
                }

                .active, #content {
                    ...
                }

            동일한 CSS를 부여해야할 경우 CSS를 추가 작성하지 않고 재사용

        * 5) 가족선택자
            CSS 선택자의 가족
                HTML 요소에는 가족관계가 있다

                    조상 : 상위의 모든 요소
                    자손 : 하위의 모든 요소

                    부모 : 바로 위 상위 요소
                    자식 : 바로 아래 하위 요소

                    형제 : 이웃한 요소

        ex)
            <div>
                <div>
                    <div> ---- 기준요소
                        <div>
                            <div></div>
                            <div></div>
                        </div>
                    </div>
                    <div></div>
                    <div></div>
                </div>
                <div></div>
                <div></div>
            </div>

        (1) 자식 선택자 ( " > " )
            기준 요소 > 자식 요소 선택자 {
                ...CSS
            }

            ex)
                header > nav {
                    ...
                }

                (탐색의 깊이가 더 깊은 것이 우선 순위가 높다)
                header > nav > p {
                    ...
                }

                nav > p {
                    ...
                }


                    <header>
                            <nav>
                                    <p> ... </p> <--- 선택
                            </nav>
                    </header>

        (2) 자손 선택자 ( " " )
                기준 요소  자손 선택자 {
                    ...
                }

                ex)
                    header p {

                    }

                    <header>
                            <p>
                                <p>
                                    <p></p>
                                </p>
                            </p>
                            <p></p>
                    </header>


