
    HTML의 파싱 과정

    1. 웹 브라우저는 전달 받은 리소스를 브라우저 로더가 분석
    2. DOM tree, CSSOM 생성
    3. 두 트리가 합쳐지면서 랜더링 트리(사용자에게 보여질 트리)가 생성
    4. 레이아웃(크기, 위치) -> 페인트(화면에 그려주는 것) --> 화면에 변화가 생기면 "리페인트"



    naver.com을 주소창에 입력했을 때 일어나는 일

    1. 사용자가 도메인을 입력
    2. 도메인을 통해 DNS에 대응하는 주소 요청
    3. 웹 브라우저는 해당 페이지를 랜더링하기 위한 리소스를 요청(랜더링: 화면을 그려준다)
    4. WAS (웹서버의 도우미, web application server - ex. Tomcat) --> 데이터 처리
    5. 리소스는 브라우저 엔진에게 전달, 평가, 실행, 해당 페이지를 레이아웃 및 페인트

----------------------------------------------------------------------------------------

    * 크기단위

    px
        절대 크기 지정방식

    rem
        문서 요소 최상위 요소(html) font-size의 배율
        (1rem = 16px, 1.5rem = 24px)

    em
        상위 요소(부모 요소)의 font-size의 배율
        (1.5em = 부모 요소의 font-size가 16px일 경우 24px)

    %
        상위 요소(부모 요소)의 비율
        (부모요소 500px, 30% = 150px)

    vw, vh
        viewport => "사용자가 보고 있는" 화면의 해상도

        100vw(h)는 사용자 해상도의 100% (스크롤의 크기가 포함되어 있지 않은, 진짜 화면을 가득 채우는 100%)
        30vw(h)는 사용자 해상도의 30%

        * 100vw는 사용하지 않습니다.
            - 세로 스크롤의 길이를 포함하지 않기 때문에 가로 스크롤 이슈가 생김

    calc
        계산 기능
        height: calc(100vh - 8rem) * 띄어쓰기 주의

----------------------------------------------------------------------------------------

    CSS 배경, 마진, 박스사이징, 테두리

    * positation * display(flex, grid)